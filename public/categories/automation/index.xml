<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Automation on Sam Thomas</title>
    <link>//localhost:1313/categories/automation/</link>
    <description>Recent content in Automation on Sam Thomas</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 17 Jun 2024 16:30:00 +0100</lastBuildDate>
    <atom:link href="//localhost:1313/categories/automation/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Static website validation with Vale</title>
      <link>//localhost:1313/posts/static-website-vale-validation/</link>
      <pubDate>Mon, 17 Jun 2024 16:30:00 +0100</pubDate>
      <guid>//localhost:1313/posts/static-website-vale-validation/</guid>
      <description>Introduction samwthomas.com is hosted using an application called Hugo, this is a &amp;ldquo;static website&amp;rdquo; application which converts basic files, into a richer onlne version. For example, in our case it converts a series of Markdown documents in a folder, into a website with pages, navigation and styling. The benefit of this is that new content can be added easily, and can be managed through established version control procedures. However, many spelling and grammer checks are not aware of markdown; furthermore, version control systems are often integrated into pipelines, but automated documentation review (spelling and grammer, styling, use of specific langauge) is something I rarely see in these documentation.</description>
    </item>
    <item>
      <title>SPOF NetworkX Detection</title>
      <link>//localhost:1313/posts/spof-networkx-detection/</link>
      <pubDate>Mon, 06 May 2024 16:30:00 +0100</pubDate>
      <guid>//localhost:1313/posts/spof-networkx-detection/</guid>
      <description>Detecting Single Points of Failure using NetworkX The ability to think of a TCP/IP Network as just a mathematical graph is underutilised by typical (network automation) engineers in my opinion. Graph theory is a well established field of mathematics, and converting a (computer) network to it&amp;rsquo;s graphical state enables us to reap benefits at minimal cost.&#xA;In this blog post, I introduce converting a (basic) network to a graph, at the IPv4 layer, using Cisco .</description>
    </item>
  </channel>
</rss>
